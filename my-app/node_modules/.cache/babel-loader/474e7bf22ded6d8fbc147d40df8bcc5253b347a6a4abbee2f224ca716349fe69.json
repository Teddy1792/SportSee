{"ast":null,"code":"var _jsxFileName = \"/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getUserFirstNameById, getUserAverageSessionsById, getUserActivityById, getUserPerformanceById, getUserMainDataById } from '../services/dataService.js';\nimport { Welcome } from './Welcome';\nimport { ActivityReport } from './ActivityReport';\nimport { LengthReport } from './LengthReport';\nimport { UserPerformance } from './UserPerformance';\nimport { Score } from './Score';\nimport { Card } from './Card';\nimport { ReactComponent as FatIcon } from '../img/fat-icon.svg';\nimport { ReactComponent as CarbsIcon } from '../img/carbs-icon.svg';\nimport { ReactComponent as ProteinIcon } from '../img/protein-icon.svg';\nimport { ReactComponent as CalorieIcon } from '../img/calories-icon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n  var _ref, _userData$todayScore;\n  const {\n    id\n  } = useParams();\n  const userId = Number(id);\n\n  // Initializing state for various user data\n  const [userName, setUserName] = useState('');\n  const [userActivity, setUserActivity] = useState(null);\n  const [lengthActivity, setLengthActivity] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    // Fetching and setting user name\n    setUserName(getUserFirstNameById(userId));\n\n    // Fetching and setting user activity\n    setUserActivity(getUserActivityById(userId));\n\n    // Fetching and setting length of activity\n    setLengthActivity(getUserAverageSessionsById(userId));\n\n    // Fetching and setting user performance\n    setUserPerformance(getUserPerformanceById(userId));\n\n    // Fetching and setting main user data asynchronously\n    getUserMainDataById(userId).then(data => setUserData(data)).catch(error => console.error(\"Error fetching main user data:\", error));\n  }, [userId]);\n\n  // Extracting additional data once userData is available\n  const userScore = (_ref = (_userData$todayScore = userData === null || userData === void 0 ? void 0 : userData.todayScore) !== null && _userData$todayScore !== void 0 ? _userData$todayScore : userData === null || userData === void 0 ? void 0 : userData.score) !== null && _ref !== void 0 ? _ref : 0;\n  const {\n    calorieCount,\n    proteinCount,\n    carbohydrateCount,\n    lipidCount\n  } = (userData === null || userData === void 0 ? void 0 : userData.keyData) || {};\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftColumn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperRow\",\n          children: /*#__PURE__*/_jsxDEV(ActivityReport, {\n            userActivity: userActivity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottomRow\",\n          children: [/*#__PURE__*/_jsxDEV(LengthReport, {\n            lengthActivity: lengthActivity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UserPerformance, {\n            userPerformance: userPerformance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Score, {\n            userScore: userScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightColumn\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"Calories\",\n          value: calorieCount,\n          unit: \"kCal\",\n          Icon: CalorieIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Prot\\xE9ines\",\n          value: proteinCount,\n          unit: \"g\",\n          Icon: ProteinIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Glucides\",\n          value: carbohydrateCount,\n          unit: \"g\",\n          Icon: CarbsIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Lipides\",\n          value: lipidCount,\n          unit: \"g\",\n          Icon: FatIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"vqC25KXbocjMtHK8zQMhaAKAQNw=\", false, function () {\n  return [useParams];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getUserFirstNameById","getUserAverageSessionsById","getUserActivityById","getUserPerformanceById","getUserMainDataById","Welcome","ActivityReport","LengthReport","UserPerformance","Score","Card","ReactComponent","FatIcon","CarbsIcon","ProteinIcon","CalorieIcon","jsxDEV","_jsxDEV","Home","_s","_ref","_userData$todayScore","id","userId","Number","userName","setUserName","userActivity","setUserActivity","lengthActivity","setLengthActivity","userPerformance","setUserPerformance","userData","setUserData","then","data","catch","error","console","userScore","todayScore","score","calorieCount","proteinCount","carbohydrateCount","lipidCount","keyData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","unit","Icon","_c","$RefreshReg$"],"sources":["/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { \n    getUserFirstNameById,\n    getUserAverageSessionsById,\n    getUserActivityById,\n    getUserPerformanceById,\n    getUserMainDataById\n} from '../services/dataService.js';\n\nimport { Welcome } from './Welcome';\nimport { ActivityReport } from './ActivityReport';\nimport { LengthReport } from './LengthReport';\nimport { UserPerformance } from './UserPerformance';\nimport { Score } from './Score'\nimport { Card } from './Card'\n\nimport { ReactComponent as FatIcon } from '../img/fat-icon.svg';\nimport { ReactComponent as CarbsIcon } from '../img/carbs-icon.svg';\nimport { ReactComponent as ProteinIcon } from '../img/protein-icon.svg';\nimport { ReactComponent as CalorieIcon } from '../img/calories-icon.svg';\n\nexport function Home() {\n  const { id } = useParams();\n  const userId = Number(id);\n\n  // Initializing state for various user data\n  const [userName, setUserName] = useState('');\n  const [userActivity, setUserActivity] = useState(null);\n  const [lengthActivity, setLengthActivity] = useState(null);\n  const [userPerformance, setUserPerformance] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    // Fetching and setting user name\n    setUserName(getUserFirstNameById(userId));\n\n    // Fetching and setting user activity\n    setUserActivity(getUserActivityById(userId));\n\n    // Fetching and setting length of activity\n    setLengthActivity(getUserAverageSessionsById(userId));\n\n    // Fetching and setting user performance\n    setUserPerformance(getUserPerformanceById(userId));\n\n    // Fetching and setting main user data asynchronously\n    getUserMainDataById(userId)\n      .then(data => setUserData(data))\n      .catch(error => console.error(\"Error fetching main user data:\", error));\n  }, [userId]);\n\n  // Extracting additional data once userData is available\n  const userScore = userData?.todayScore ?? userData?.score ?? 0;\n  const { calorieCount, proteinCount, carbohydrateCount, lipidCount } = userData?.keyData || {};\n\n  return (\n    <section className='home'>\n      <Welcome userName={userName}/>\n      <div className='dataDisplay'>\n        <div className='leftColumn'>\n          <div className='upperRow'>\n            <ActivityReport userActivity={userActivity} />\n          </div>\n          <div className='bottomRow'>\n            <LengthReport lengthActivity={lengthActivity} />\n            <UserPerformance userPerformance={userPerformance} />\n            <Score userScore={userScore} />\n          </div>\n        </div>\n        <div className='rightColumn'>\n          <Card title=\"Calories\" value={calorieCount} unit=\"kCal\" Icon={CalorieIcon} />\n          <Card title=\"Protéines\" value={proteinCount} unit=\"g\" Icon={ProteinIcon} />\n          <Card title=\"Glucides\" value={carbohydrateCount} unit=\"g\" Icon={CarbsIcon} />\n          <Card title=\"Lipides\" value={lipidCount} unit=\"g\" Icon={FatIcon} />\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}