{"ast":null,"code":"export class UserMainData {\n  constructor(data) {\n    var _ref, _data$todayScore;\n    this.id = data.id;\n    this.firstName = data.userInfos.firstName;\n    this.lastName = data.userInfos.lastName;\n    this.age = data.userInfos.age;\n    this.todayScore = (_ref = (_data$todayScore = data.todayScore) !== null && _data$todayScore !== void 0 ? _data$todayScore : data.score) !== null && _ref !== void 0 ? _ref : 0;\n    this.keyData = data.keyData || {};\n  }\n  getFullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  getFirstName() {\n    return this.firstName;\n  }\n}\nexport class UserActivity {\n  constructor(data) {\n    if (!data || !data.userId || !Array.isArray(data.sessions)) {\n      throw new Error('Invalid data for UserActivity');\n    }\n    this.userId = data.userId;\n    this.sessions = data.sessions || [];\n  }\n  getSessionOnDate(dateString) {\n    return this.sessions.find(session => session.day === dateString) || null;\n  }\n}\nexport class UserAverageSessions {\n  constructor(data) {\n    this.userId = data.userId;\n    this.sessions = data.sessions || [];\n  }\n  getAverageSessionLength() {\n    const totalLength = this.sessions.reduce((acc, session) => acc + session.sessionLength, 0);\n    return this.sessions.length ? totalLength / this.sessions.length : 0;\n  }\n}\nexport class UserPerformance {\n  constructor(data) {\n    this.userId = data.userId;\n    this.kind = data.kind || {};\n    this.data = data.data || [];\n  }\n  getPerformanceByKind(kindId) {\n    return this.data.find(performance => performance.kind === kindId) || null;\n  }\n}","map":{"version":3,"names":["UserMainData","constructor","data","_ref","_data$todayScore","id","firstName","userInfos","lastName","age","todayScore","score","keyData","getFullName","getFirstName","UserActivity","userId","Array","isArray","sessions","Error","getSessionOnDate","dateString","find","session","day","UserAverageSessions","getAverageSessionLength","totalLength","reduce","acc","sessionLength","length","UserPerformance","kind","getPerformanceByKind","kindId","performance"],"sources":["/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/services/dataModel.js"],"sourcesContent":["export class UserMainData {\n        constructor(data) {\n            this.id = data.id;\n            this.firstName = data.userInfos.firstName;\n            this.lastName = data.userInfos.lastName;\n            this.age = data.userInfos.age;\n            this.todayScore = data.todayScore ?? data.score ?? 0;\n            this.keyData = data.keyData || {};\n        }\n        getFullName() {\n            return `${this.firstName} ${this.lastName}`;\n        }\n        getFirstName() {\n            return this.firstName;\n        }        \n    }\n\n    export class UserActivity {\n        constructor(data) {\n            if (!data || !data.userId || !Array.isArray(data.sessions)) {\n                throw new Error('Invalid data for UserActivity');\n            }\n            this.userId = data.userId;\n            this.sessions = data.sessions || [];\n        }\n    \n        getSessionOnDate(dateString) {\n            return this.sessions.find(session => session.day === dateString) || null;\n        }\n    }\n    \n\nexport class UserAverageSessions {\n    constructor(data) {\n        this.userId = data.userId;\n        this.sessions = data.sessions || [];\n    }\n\n    getAverageSessionLength() {\n        const totalLength = this.sessions.reduce((acc, session) => acc + session.sessionLength, 0);\n        return this.sessions.length ? totalLength / this.sessions.length : 0;\n    }\n}\n\nexport class UserPerformance {\n    constructor(data) {\n        this.userId = data.userId;\n        this.kind = data.kind || {};\n        this.data = data.data || [];\n    }\n\n    getPerformanceByKind(kindId) {\n        return this.data.find(performance => performance.kind === kindId) || null;\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,CAAC;EAClBC,WAAWA,CAACC,IAAI,EAAE;IAAA,IAAAC,IAAA,EAAAC,gBAAA;IACd,IAAI,CAACC,EAAE,GAAGH,IAAI,CAACG,EAAE;IACjB,IAAI,CAACC,SAAS,GAAGJ,IAAI,CAACK,SAAS,CAACD,SAAS;IACzC,IAAI,CAACE,QAAQ,GAAGN,IAAI,CAACK,SAAS,CAACC,QAAQ;IACvC,IAAI,CAACC,GAAG,GAAGP,IAAI,CAACK,SAAS,CAACE,GAAG;IAC7B,IAAI,CAACC,UAAU,IAAAP,IAAA,IAAAC,gBAAA,GAAGF,IAAI,CAACQ,UAAU,cAAAN,gBAAA,cAAAA,gBAAA,GAAIF,IAAI,CAACS,KAAK,cAAAR,IAAA,cAAAA,IAAA,GAAI,CAAC;IACpD,IAAI,CAACS,OAAO,GAAGV,IAAI,CAACU,OAAO,IAAI,CAAC,CAAC;EACrC;EACAC,WAAWA,CAAA,EAAG;IACV,OAAQ,GAAE,IAAI,CAACP,SAAU,IAAG,IAAI,CAACE,QAAS,EAAC;EAC/C;EACAM,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACR,SAAS;EACzB;AACJ;AAEA,OAAO,MAAMS,YAAY,CAAC;EACtBd,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACc,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAAChB,IAAI,CAACiB,QAAQ,CAAC,EAAE;MACxD,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IACpD;IACA,IAAI,CAACJ,MAAM,GAAGd,IAAI,CAACc,MAAM;IACzB,IAAI,CAACG,QAAQ,GAAGjB,IAAI,CAACiB,QAAQ,IAAI,EAAE;EACvC;EAEAE,gBAAgBA,CAACC,UAAU,EAAE;IACzB,OAAO,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKH,UAAU,CAAC,IAAI,IAAI;EAC5E;AACJ;AAGJ,OAAO,MAAMI,mBAAmB,CAAC;EAC7BzB,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACc,MAAM,GAAGd,IAAI,CAACc,MAAM;IACzB,IAAI,CAACG,QAAQ,GAAGjB,IAAI,CAACiB,QAAQ,IAAI,EAAE;EACvC;EAEAQ,uBAAuBA,CAAA,EAAG;IACtB,MAAMC,WAAW,GAAG,IAAI,CAACT,QAAQ,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEN,OAAO,KAAKM,GAAG,GAAGN,OAAO,CAACO,aAAa,EAAE,CAAC,CAAC;IAC1F,OAAO,IAAI,CAACZ,QAAQ,CAACa,MAAM,GAAGJ,WAAW,GAAG,IAAI,CAACT,QAAQ,CAACa,MAAM,GAAG,CAAC;EACxE;AACJ;AAEA,OAAO,MAAMC,eAAe,CAAC;EACzBhC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACc,MAAM,GAAGd,IAAI,CAACc,MAAM;IACzB,IAAI,CAACkB,IAAI,GAAGhC,IAAI,CAACgC,IAAI,IAAI,CAAC,CAAC;IAC3B,IAAI,CAAChC,IAAI,GAAGA,IAAI,CAACA,IAAI,IAAI,EAAE;EAC/B;EAEAiC,oBAAoBA,CAACC,MAAM,EAAE;IACzB,OAAO,IAAI,CAAClC,IAAI,CAACqB,IAAI,CAACc,WAAW,IAAIA,WAAW,CAACH,IAAI,KAAKE,MAAM,CAAC,IAAI,IAAI;EAC7E;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}