{"ast":null,"code":"var _s = $RefreshSig$();\n// useUserActivity.js\nimport { useState, useEffect } from 'react';\nimport { getUserActivityById } from './dataService'; // Update with your actual path\n\nexport const useUserActivity = userId => {\n  _s();\n  const [userActivity, setUserActivity] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const activity = await getUserActivityById(userId);\n        setUserActivity(activity);\n        setError(null); // It's important to reset the error if the fetching succeeds\n      } catch (error) {\n        console.error('Error fetching user activity: ', error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [userId]);\n  console.log('user acticity inside the hook', userActivity);\n  return {\n    userActivity,\n    isLoading,\n    error\n  };\n};\n_s(useUserActivity, \"ALyp2In3SLpjnx6saYyUKxOQp8g=\");","map":{"version":3,"names":["useState","useEffect","getUserActivityById","useUserActivity","userId","_s","userActivity","setUserActivity","isLoading","setIsLoading","error","setError","fetchData","activity","console","log"],"sources":["/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/services/useUserActivity.js"],"sourcesContent":["// useUserActivity.js\nimport { useState, useEffect } from 'react';\nimport { getUserActivityById } from './dataService'; // Update with your actual path\n\nexport const useUserActivity = (userId) => {\n    const [userActivity, setUserActivity] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true);\n            try {\n                const activity = await getUserActivityById(userId);\n                setUserActivity(activity);\n                setError(null); // It's important to reset the error if the fetching succeeds\n            } catch (error) {\n                console.error('Error fetching user activity: ', error);\n                setError(error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [userId]);\n    console.log('user acticity inside the hook',userActivity)\n    return { userActivity, isLoading, error };\n};\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,eAAe,CAAC,CAAC;;AAErD,OAAO,MAAMC,eAAe,GAAIC,MAAM,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMI,QAAQ,GAAG,MAAMX,mBAAmB,CAACE,MAAM,CAAC;QAClDG,eAAe,CAACM,QAAQ,CAAC;QACzBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZI,OAAO,CAACJ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDC,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC,SAAS;QACND,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EACZU,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAACT,YAAY,CAAC;EACzD,OAAO;IAAEA,YAAY;IAAEE,SAAS;IAAEE;EAAM,CAAC;AAC7C,CAAC;AAACL,EAAA,CAxBWF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}