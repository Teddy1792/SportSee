{"ast":null,"code":"import { USER_MAIN_DATA, USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_PERFORMANCE } from '../file/data.js';\n\n//function to get the user's name\nexport const getUserFirstNameById = id => {\n  const user = USER_MAIN_DATA.find(user => user.id === id);\n  return user ? user.userInfos.firstName : 'User not found';\n};\n\n// Function to get the main data by user ID\nexport const getUserMainDataById = id => {\n  return USER_MAIN_DATA.find(user => user.id === id);\n};\n\n// Function to get the activity data by user ID\nexport const getUserActivityById = userId => {\n  return USER_ACTIVITY.find(activity => activity.userId === userId);\n};\n\n// Function to get the average session data by user ID\nexport const getUserAverageSessionsById = userId => {\n  const userAverageSession = USER_AVERAGE_SESSIONS.find(session => session.userId === userId);\n  return userAverageSession ? userAverageSession.sessions : null;\n};\n\n// Function to get the performance data by user ID\nexport const getUserPerformanceById = userId => {\n  return USER_PERFORMANCE.find(performance => performance.userId === userId);\n};\n\n//checker les variables d'environement pour chaque fonction pour pouvoir récupérer soit l'API soit les données mockées \n// + créer une class de modélisation pour l'API (une classe pour chaque donnée)\n//formatage de données à faire directement dans la classe de modélisatione et non dans les composants !","map":{"version":3,"names":["USER_MAIN_DATA","USER_ACTIVITY","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","getUserFirstNameById","id","user","find","userInfos","firstName","getUserMainDataById","getUserActivityById","userId","activity","getUserAverageSessionsById","userAverageSession","session","sessions","getUserPerformanceById","performance"],"sources":["/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/services/dataService.js"],"sourcesContent":["import {\n    USER_MAIN_DATA,\n    USER_ACTIVITY,\n    USER_AVERAGE_SESSIONS,\n    USER_PERFORMANCE,\n  } from '../file/data.js'\n\n  //function to get the user's name\n  export const getUserFirstNameById = (id) => {\n    const user = USER_MAIN_DATA.find(user => user.id === id);\n    return user ? user.userInfos.firstName : 'User not found';\n  };\n\n  // Function to get the main data by user ID\n  export const getUserMainDataById = (id) => {\n    return USER_MAIN_DATA.find(user => user.id === id);\n  };\n  \n  // Function to get the activity data by user ID\n  export const getUserActivityById = (userId) => {\n    return USER_ACTIVITY.find(activity => activity.userId === userId);\n  };\n  \n  // Function to get the average session data by user ID\nexport const getUserAverageSessionsById = (userId) => {\n  const userAverageSession = USER_AVERAGE_SESSIONS.find(session => session.userId === userId);\n  return userAverageSession ? userAverageSession.sessions : null;\n};\n\n\n  // Function to get the performance data by user ID\n  export const getUserPerformanceById = (userId) => {\n    return USER_PERFORMANCE.find(performance => performance.userId === userId);\n  };\n  \n\n  //checker les variables d'environement pour chaque fonction pour pouvoir récupérer soit l'API soit les données mockées \n  // + créer une class de modélisation pour l'API (une classe pour chaque donnée)\n  //formatage de données à faire directement dans la classe de modélisatione et non dans les composants !"],"mappings":"AAAA,SACIA,cAAc,EACdC,aAAa,EACbC,qBAAqB,EACrBC,gBAAgB,QACX,iBAAiB;;AAExB;AACA,OAAO,MAAMC,oBAAoB,GAAIC,EAAE,IAAK;EAC1C,MAAMC,IAAI,GAAGN,cAAc,CAACO,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC;EACxD,OAAOC,IAAI,GAAGA,IAAI,CAACE,SAAS,CAACC,SAAS,GAAG,gBAAgB;AAC3D,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAIL,EAAE,IAAK;EACzC,OAAOL,cAAc,CAACO,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC;AACpD,CAAC;;AAED;AACA,OAAO,MAAMM,mBAAmB,GAAIC,MAAM,IAAK;EAC7C,OAAOX,aAAa,CAACM,IAAI,CAACM,QAAQ,IAAIA,QAAQ,CAACD,MAAM,KAAKA,MAAM,CAAC;AACnE,CAAC;;AAED;AACF,OAAO,MAAME,0BAA0B,GAAIF,MAAM,IAAK;EACpD,MAAMG,kBAAkB,GAAGb,qBAAqB,CAACK,IAAI,CAACS,OAAO,IAAIA,OAAO,CAACJ,MAAM,KAAKA,MAAM,CAAC;EAC3F,OAAOG,kBAAkB,GAAGA,kBAAkB,CAACE,QAAQ,GAAG,IAAI;AAChE,CAAC;;AAGC;AACA,OAAO,MAAMC,sBAAsB,GAAIN,MAAM,IAAK;EAChD,OAAOT,gBAAgB,CAACI,IAAI,CAACY,WAAW,IAAIA,WAAW,CAACP,MAAM,KAAKA,MAAM,CAAC;AAC5E,CAAC;;AAGD;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}