{"ast":null,"code":"var _jsxFileName = \"/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/components/UserPerformance.js\";\nimport React from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, ResponsiveContainer } from 'recharts';\nimport '../styles/UserPerformance.scss';\n\n// Translation object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = {\n  cardio: 'cardio',\n  energy: 'énergie',\n  endurance: 'endurance',\n  strength: 'force',\n  speed: 'vitesse',\n  intensity: 'intensité'\n};\nexport const UserPerformance = ({\n  userPerformance\n}) => {\n  // Check if userPerformance is null or undefined\n  if (!userPerformance) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error: Data not available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 34\n  }, this);\n  if (!userPerformance.data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error: Data not available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 39\n  }, this);\n\n  // Find the index of 'intensité' in the data array\n  const intensityIndex = userPerformance.data.findIndex(item => userPerformance.kind[item.kind] === 'intensity');\n\n  // Rotate the data array to start with 'intensité'\n  const reorderedData = [...userPerformance.data.slice(intensityIndex), ...userPerformance.data.slice(0, intensityIndex)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UserPerformanceContainer\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: 260,\n      height: 260,\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: \"70%\",\n        data: reorderedData.map(item => ({\n          kind: translations[userPerformance.kind[item.kind]],\n          value: item.value\n        })),\n        children: [/*#__PURE__*/_jsxDEV(PolarGrid, {\n          radialLines: false,\n          stroke: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n          dataKey: \"kind\",\n          axisLine: false,\n          tickLine: false,\n          tick: {\n            fill: 'white',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Radar, {\n          name: \"Performance\",\n          dataKey: \"value\",\n          stroke: \"none\",\n          fill: \"#FF0101\",\n          fillOpacity: 0.7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_c = UserPerformance;\nvar _c;\n$RefreshReg$(_c, \"UserPerformance\");","map":{"version":3,"names":["React","Radar","RadarChart","PolarGrid","PolarAngleAxis","ResponsiveContainer","jsxDEV","_jsxDEV","translations","cardio","energy","endurance","strength","speed","intensity","UserPerformance","userPerformance","children","fileName","_jsxFileName","lineNumber","columnNumber","data","intensityIndex","findIndex","item","kind","reorderedData","slice","className","width","height","cx","cy","outerRadius","map","value","radialLines","stroke","dataKey","axisLine","tickLine","tick","fill","fontSize","fontWeight","name","fillOpacity","_c","$RefreshReg$"],"sources":["/Users/theodoreabitbol/Desktop/OpenClassrooms/Projet 12/my-app/src/components/UserPerformance.js"],"sourcesContent":["import React from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, ResponsiveContainer } from 'recharts';\nimport '../styles/UserPerformance.scss';\n\n// Translation object\nconst translations = {\n  cardio: 'cardio',\n  energy: 'énergie',\n  endurance: 'endurance',\n  strength: 'force',\n  speed: 'vitesse',\n  intensity: 'intensité'\n};\n\nexport const UserPerformance = ({ userPerformance }) => {\n    // Check if userPerformance is null or undefined\n    if (!userPerformance) return <p>Error: Data not available</p>;\n    if (!userPerformance.data) return <p>Error: Data not available</p>;\n    \n    // Find the index of 'intensité' in the data array\n    const intensityIndex = userPerformance.data.findIndex(\n      item => userPerformance.kind[item.kind] === 'intensity'\n    );\n  \n    // Rotate the data array to start with 'intensité'\n    const reorderedData = [\n      ...userPerformance.data.slice(intensityIndex),\n      ...userPerformance.data.slice(0, intensityIndex)\n    ];\n  \n    return (\n      <div className='UserPerformanceContainer'>\n        <ResponsiveContainer width={260} height={260}>\n          <RadarChart\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius=\"70%\"\n            data={reorderedData.map(item => ({\n              kind: translations[userPerformance.kind[item.kind]],\n              value: item.value,\n            }))}\n          >\n                <PolarGrid radialLines={false} stroke=\"white\" />\n                <PolarAngleAxis\n                dataKey=\"kind\"\n                axisLine={false}\n                tickLine={false}\n                tick={{\n                    fill: 'white',\n                    fontSize: '12px',\n                    fontWeight: 'bold'\n                }}\n                />\n                <Radar\n                name=\"Performance\"\n                dataKey=\"value\"\n                stroke=\"none\"\n                fill=\"#FF0101\"\n                fillOpacity={0.7}\n                />\n            </RadarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}